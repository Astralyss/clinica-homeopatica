// Script simple para probar la API de compras
// No requiere Prisma, solo hace una petici√≥n HTTP

async function testAPI() {
  try {
    console.log('üß™ Probando API de compras...');
    
    // Hacer una petici√≥n a la API de compras
    const response = await fetch('http://localhost:3000/api/compras?usuarioId=1');
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ API respondi√≥ correctamente');
      console.log('üìä Total de compras:', data.total);
      
      // Buscar compras canceladas
      const comprasCanceladas = data.compras.filter(compra => compra.estado === 'cancelada');
      
      if (comprasCanceladas.length > 0) {
        console.log('üéØ Compras canceladas encontradas:', comprasCanceladas.length);
        
        comprasCanceladas.forEach((compra, index) => {
          console.log(`\nüìã Compra cancelada ${index + 1}:`);
          console.log(`   ID: ${compra.id}`);
          console.log(`   Orden: ${compra.numeroOrden}`);
          console.log(`   Estado: ${compra.estado}`);
          console.log(`   Motivo: ${compra.motivoCancelacion || 'NO HAY MOTIVO'}`);
          console.log(`   Cancelado por: ${compra.canceladoPor || 'NO HAY INFO'}`);
          console.log(`   Fecha cancelaci√≥n: ${compra.fechaCancelacion || 'NO HAY FECHA'}`);
        });
        
        // Verificar si los campos de cancelaci√≥n est√°n presentes
        const tieneCamposCancelacion = comprasCanceladas.some(compra => 
          compra.motivoCancelacion && compra.canceladoPor && compra.fechaCancelacion
        );
        
        if (tieneCamposCancelacion) {
          console.log('\nüéâ ¬°EXCELENTE! Los campos de cancelaci√≥n est√°n funcionando en la API');
        } else {
          console.log('\n‚ùå PROBLEMA: Los campos de cancelaci√≥n NO est√°n siendo devueltos por la API');
          console.log('üí° Esto significa que el problema est√° en el mapeo de la API');
        }
        
      } else {
        console.log('‚ÑπÔ∏è No hay compras canceladas para probar');
        console.log('üí° Necesitas crear y cancelar un pedido primero');
      }
      
    } else {
      console.log('‚ùå Error en la API:', response.status, response.statusText);
    }
    
  } catch (error) {
    console.error('‚ùå Error al probar la API:', error.message);
    console.log('üí° Aseg√∫rate de que el servidor est√© corriendo en http://localhost:3000');
  }
}

// Ejecutar la prueba
testAPI(); 